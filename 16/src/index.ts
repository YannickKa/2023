//--------------- Input section ----------------------//

// Forward slash (/) is replaced with (}) to avoid escaping issues
const testInput = `.|...}....
|.-.}.....
.....|-...
........|.
..........
.........}
..../.}}..
.-.-/..|..
.|....-|.}
..//.|....`.split("\n");

const realInput =
  `}.-/...-}......../.|......|.........../..-..................|....-.}............................../...........
..........-.............}...}.........|..}.......................-..........-.......}.../.......-/............
........|.............-.....|..|........................}.}.../../.....-........................}.............
....../}.....................|........|.....-...........-..}......./-.............................-........./.
.}..}.............-........|.......|...|..............................-..-......-......|......................
..........|/...}.............}............../-......}.../........................./............./.../......../
..............}......./..-...............|...........}...|............|...........-..-............|...........
..........-...............|..././...........................................|...........-.../.-.|.....|.......
.........-...|..................-...........}.-...................../.../........................|/......./...
.................................-.././...................|}..............|.........../.......................
.............../......-.................}....--.....-............................./.|./.................|.....
..../....|...|..................../....}...|............|...../.././../--......}.}....|.......-............}./
......}....-...|......}...........-......./..................../.....-..............}.............|......./...
............|.}...................|.........................|........}............................./.}.......|
............../...............................|.........../.................}-.................../........../.
.|....|...........|..................|......./|}}.|}.-...}..../.........//........|............../...........|
........................|.....--......|.............-..................}...../..../.......-....|...}..........
...............}........-........../...-|............}......./.}...........-|................/.-..............
..../....|.}.............|......|...............................................|.................}...........
.}...}......./.....|.}....|..................-../|-......................|.................-..|......}........
.../.........................................}.....././....................|.......-........-......}....|.....
.................}./}..-../......../...}................................-......-..}...........................
.......--..-........}/........./........../...............}..............}...-........-......-../.........|...
.|...............-........./..............}..}......................|......./..|..............-.......|.|.....
........./............}............|........}...|...}........-.......................|...................}....
..................-}......../.................}.......}.....|...........|..|-........}.............|.......}}.
...|.........../.......|...../...|...}........}}...................................-............-../...../....
......./....................|.........../...-................-....................}.......|...................
}....}.......................-.|.}...../..-...................|......................-..................../...
......|........-|...-/.|........................./.....|.....}.........-........-......-.............././.....
......|.............-.}...............................}..|....}..............|./..|./...}......./..........|}|
......././.}...................-...-............/...................|/..........-}./.................|........
.........|..........|}../.........}..............-.........}................../}./.............-..............
...}.......................}..................................}...........................................|...
...|........}..........|....|..../..|.........-}.................-...-..}.}.........}............|....|...//..
.././.....|.....-..........|.................}.........}........./......-...-.}.}.....................}.......
......./....}........}}..}...|...../.................|.......|.}.....}............................../}....}...
.........}......../.}............|...............................................................|/...........
.}.....-}-.........|.........|....|...........-....}.....|................}...............-............./.....
.....-..............................-.....-..........-..................../..../........................|.....
...........}...........-/....................-.....-............/........|........-/.........--./........-..}}
.|................................................|..................-.......|.............|}/................
.|.................-.-..........|.........................../..../....../.....}...../......./.................
........./..../..|..........}..................}....................................................../.......
.........}............|.../......../........|......................../..../...|.}...}......................|..
........./................}.............}........|....................}./......|.........-....../...../.......
..../.....|...../........-...................|............/.....||...............-....-.-.....................
}./...}.|...|.............|.......}....../|...}}/.|.../....-.........}}|..|....-........}............-.......|
......}-..............|.....}.....|...}..............................|.....................}......-.....|.....
......}.-..........-..|......................................-..../......................../........}.......|.
/...................-...}.........--.............................}...........}................|......./.......
.................-......-..../..}.............-./|......-....}...........-...................}.....|........-.
|........--.............}...-....|.......|.}............|...../}...........}/../............................-.
...|./-..}.|...........}........../..............................}......-.......-.....|..........-........./..
.......-|..................-..........|..-............................../.............|..|.||.................
....-......................}....}..................}......./............./..-........|..............-....|....
-..........-.........-.../|........--.............-................|..../|.................|..................
...}......./..}..}......./|.....|-.............-............................}..}......}...-..}...............}
./......................|..........}...........|.|.......}..........}......................................}..
................|...............-.../....}......./.}........-..............................|...-....-.........
..}.......................}..../..|.-.........-.............}.......|../.|.|..|........|..............-.......
...........}................}..........................}.....................}........|.......................
..........|....}.......}...........|...../......................................./...}.../........../.........
./...............}...........|..-....-./..}...}...}../...............-}............}....}............-........
././............|................|........../...}...../.............-....-.............}......................
....-.|..................../.............................-...............................|....................
..-......|....-.........-...}......}.........||....-.}............................-...|..............|........
........}...........}.-.......}.../.........}.../.....|.................../..|..|....}..../..-................
..........-..................}..|...|.|..}......................./...........-......./.............|..}...../.
.}......|}.|..}.......|}.-.......-........../........../..........}.........../.........|.....................
./..........|..................//.|......|........-...}...//............-.../..............|.......-....-.....
...............}......}........|.-................}......-...................|.............-............-.-...
...........................}/...........}../..}....................}...........|.............-..........-.....
.............../........}|.........}..........-......../............-..........|........|/....................
....}................-..................././........|.....|...........................-..|....................
}-............-.......}......}.................../.......-.../............/....-..}.......|................|..
.........................../....../.|...}/...}........-|.|.......}..-........-............................../.
.................}.....................|..........|.............|......|/.}..........................-........
....}../................................|.......-......|.................-......................|...-.../.....
....-.........|..../|..............................-|...............................-..-......}.....-.........
./}...............|.|..............-./..|........./...................................................}.......
..............-....}..|....../.....}.............}..............................-...-..../.....|..............
........-.........|..............................................-....}--...........|}...................../..
................/.|.................-....|......./............-...................../.-./}................|...
................|............................../..-./.....|..-........................./.....|..............-.
....../........../.......|...|.....}........./.............|..................................|.|.............
....................................................||.....|................/......-....../....../............
.........../.....}...................|...........}../....................................../.............../..
./.|............../.............................}..|....}-............./......................................
.........}................../-.....|...........}................|...../..................................|....
..|...../.....|...............}.....-.................................|/............-..|..-...|......-........
....|....-..............|.......|............./}-...........}//.........|...........}...../..............--...
.............-........}|...........................-....../....||............/......./....................../.
|..................-......}.........-.......|..............................}.|/..................}......}.-...
....../.......................|........|..|.}...........|.........}................}}..................}.../..
...........-....|...........||...-.......|.|....-.....}}-................|.........../..................}/....
................|.-.................|-./..-..|.........-..............-.........-../........................-.
.....................-.....................................|.........}......||./................|.............
............/...-............|......./......................................../..........................-....
..../.......}.-............|..........|....-...........}.-.................................}./...|............
...........|.-........|.|....-...........}......-...-..........|.}.|.|.....}....}............../..............
......}...}....../....}......}.|......................./.......................}.................../..../}....
...../.|...............|.../}.........................................-...........|./........................|
.........................-.-.......}./..........|.........|/.......-......................-...-..|}|........}.
..................|......-..................|..........}..-../........................-......}...}............
..|...............}.............../.........-./............../.../..../.|}......}..../-.....|....-.........|..
...-..-..............--...|...................................................|.-.../.../.....}.....}.........
.}./.../..............././.........}.........|..}..........}.................}..|.....-......-................
......-...................|../....................|...............|.............|/..}.......|........}......|.
......}/.....|................./..................................|.......|./........|.............-...-......`.split(
    "\n"
  );

//--------------- Function section ----------------------//
function createGrid(input: string[]): string[][] {
  let grid: string[][] = [];
  input.forEach((str) => grid.push([...str]));
  return grid;
}

function createEnergizedGrid(grid: string[][]) {
  let energizedGrid: string[][] = [];
  grid.forEach((row) => energizedGrid.push([...".".repeat(row.length)]));
  return energizedGrid;
}

type Snapshot = {
  current: number[];
  previous: number[];
};

function followBeam(
  grid: string[][],
  energizedGrid: string[][],
  start: number[],
  previous: number[] = [0, -1]
): string[][] {
  let current: number[] = start;
  const visitedSplits: string[] = [];
  const queue: Snapshot[] = [{ current: current, previous: previous }];

  while (queue.length > 0) {
    {
      const snapshot = queue.pop()!;
      current = snapshot.current;
      previous = snapshot.previous;

      while (
        current[0] >= 0 &&
        current[0] < grid.length &&
        current[1] >= 0 &&
        current[1] < grid[0].length
      ) {
        const currentSymbol = grid[current[0]][current[1]];
        energizedGrid[current[0]][current[1]] = "#";

        if (currentSymbol === ".") {
          if (current[0] === previous[0]) {
            if (current[1] > previous[1]) {
              previous = [current[0], current[1]];
              current[1]++;
            } else {
              previous = [current[0], current[1]];
              current[1]--;
            }
          } else if (current[1] === previous[1]) {
            if (current[0] > previous[0]) {
              previous = [current[0], current[1]];
              current[0]++;
            } else {
              previous = [current[0], current[1]];
              current[0]--;
            }
          }
        }

        if (currentSymbol === "|") {
          if (
            current[0] === previous[0] &&
            visitedSplits.findIndex(
              (str) =>
                str ===
                `${current[0]},${current[1]}|${previous[0]},${previous[1]}`
            ) == -1
          ) {
            visitedSplits.push(
              `${current[0]},${current[1]}|${previous[0]},${previous[1]}`
            );

            if (current[0] > 0) {
              queue.push({
                current: [current[0] - 1, current[1]],
                previous: [current[0], current[1]],
              });
            }
            if (current[0] < grid.length - 1) {
              queue.push({
                current: [current[0] + 1, current[1]],
                previous: [current[0], current[1]],
              });
            } else {
              previous = [-1, -1];
            }
          } else if (current[0] > previous[0]) {
            previous = [current[0], current[1]];
            current[0]++;
          } else {
            previous = [current[0], current[1]];
            current[0]--;
          }
        }

        if (currentSymbol === "-") {
          if (
            current[1] === previous[1] &&
            visitedSplits.findIndex(
              (str) =>
                str ===
                `${current[0]},${current[1]}|${previous[0]},${previous[1]}`
            ) == -1
          ) {
            visitedSplits.push(
              `${current[0]},${current[1]}|${previous[0]},${previous[1]}`
            );
            if (current[1] > 0) {
              queue.push({
                current: [current[0], current[1] - 1],
                previous: [current[0], current[1]],
              });
            }
            if (current[1] < grid[0].length - 1) {
              queue.push({
                current: [current[0], current[1] + 1],
                previous: [current[0], current[1]],
              });
            } else {
              previous = [-1, -1];
            }
          } else if (current[1] > previous[1]) {
            previous = [current[0], current[1]];
            current[1]++;
          } else {
            previous = [current[0], current[1]];
            current[1]--;
          }
        }

        if (currentSymbol === "}") {
          if (current[0] === previous[0]) {
            if (current[1] > previous[1]) {
              previous = [current[0], current[1]];
              current[0]++;
            } else {
              previous = [current[0], current[1]];
              current[0]--;
            }
          } else {
            if (current[0] > previous[0]) {
              previous = [current[0], current[1]];
              current[1]++;
            } else {
              previous = [current[0], current[1]];
              current[1]--;
            }
          }
        }

        if (currentSymbol === "/") {
          if (current[0] === previous[0]) {
            if (current[1] > previous[1]) {
              previous = [current[0], current[1]];
              current[0]--;
            } else {
              previous = [current[0], current[1]];
              current[0]++;
            }
          } else {
            if (current[0] > previous[0]) {
              previous = [current[0], current[1]];
              current[1]--;
            } else {
              previous = [current[0], current[1]];
              current[1]++;
            }
          }
        }
      }
    }
  }
  return energizedGrid;
}

const getAnswer = function (energizedGrid: string[][]): number {
  return energizedGrid.flat().filter((el) => el === "#").length;
};

const printGrid = function (grid: string[][]) {
  console.log("\n");
  grid.forEach((row) => console.log(row.join("")));
  console.log("\n");
};

const findMax = function (grid: string[][]): number {
  let max: number = 0;

  for (let i = 0; i < grid.length; i++) {
    // From left
    let start = [i, 0];
    let previous = [i, -1];
    let energizedGrid = createEnergizedGrid(grid);
    followBeam(grid, energizedGrid, start, previous);
    let answer = getAnswer(energizedGrid);
    if (answer > max) max = answer;

    // From right
    start = [i, grid[0].length - 1];
    previous = [i, grid[0].length];
    energizedGrid = createEnergizedGrid(grid);
    followBeam(grid, energizedGrid, start, previous);
    answer = getAnswer(energizedGrid);
    if (answer > max) max = answer;
  }

  for (let i = 0; i < grid[0].length; i++) {
    // From top
    let start = [0, i];
    let previous = [-1, i];
    let energizedGrid = createEnergizedGrid(grid);
    followBeam(grid, energizedGrid, start, previous);
    let answer = getAnswer(energizedGrid);
    if (answer > max) max = answer;

    // From bottom
    start = [grid.length - 1, i];
    previous = [grid.length, i];
    energizedGrid = createEnergizedGrid(grid);
    followBeam(grid, energizedGrid, start, previous);
    answer = getAnswer(energizedGrid);
    if (answer > max) max = answer;
  }

  return max;
};
//--------------- Answer section ----------------------//
const input = realInput;
const grid = createGrid(input);
const start = Date.now();
const answer = findMax(grid);
const end = Date.now();
// energizedGrid = followBeam(grid, energizedGrid, [0, 0]);
// const answer = getAnswer(energizedGrid);
console.log(`Answer two: ${answer}. It took ${end - start} ms to find`);
